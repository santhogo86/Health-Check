- name: Execute Warm Process Check Command
  shell: kubectl exec {{ pod_name }} -n {{ namespace }} -- {{ EID_003_CMD }}
  register: cmdOutput
  ignore_errors: yes

- name: Display command output
  debug:
    msg: "Command output: {{ cmdOutput.stdout | default('No output in check mode') }}"

- name: Extract warm processes
  set_fact:
    warm_processes: "{{ cmdOutput.stdout_lines | default([]) | select('match', '.*warm.*') | select('match', '.*IMS.*') | reject('match', '.*grep.*') | list }}"

- name: Debug process lines to understand format
  debug:
    msg: "Process line: {{ item }}"
  with_items: "{{ warm_processes }}"
  when: warm_processes | length > 0

- name: Calculate runtime for each warm process
  set_fact:
    process_details: "{{ process_details | default([]) + [{'process_line': item, 'runtime_minutes': runtime_calc}] }}"
  vars:
    timestamp_match: "{{ item | regex_search('([A-Z][a-z]{2} [A-Z][a-z]{2} +[0-9]{1,2} [0-9]{2}:[0-9]{2}:[0-9]{2} [0-9]{4})') }}"
    runtime_calc: "{{ ((ansible_date_time.epoch | int) - (timestamp_match | to_datetime('%a %b %d %H:%M:%S %Y') | int)) / 60 | int if timestamp_match else 0 }}"
  with_items: "{{ warm_processes }}"
  when: warm_processes | length > 0

- name: Check pass criteria
  set_fact:
    failing_processes: "{{ process_details | default([]) | selectattr('runtime_minutes', '>', warm_threshold_min) | list }}"

- name: Determine final result
  set_fact:
    final_result: "{{ 'PASS' if (failing_processes | default([]) | length == 0) else 'FAIL' }}"

- name: Result
  debug:
    msg: "{{ final_result }}"

- name: Set final result for EID_003
  set_fact:
    eid_003_final_result: "{{ final_result }}"
