---
- name: "{{ EID_404_DESCRIPTION }}"
  hosts: remote_machines
  gather_facts: no
  vars_files:
    - vars_working.yml
  tasks:
    - name: Get nodes
      raw: "{{ EID_402_CMD }} "
      register: nodes

    - name: Check allocated resources
      raw: "{{ EID_404_CMD_GET_NODE_INFO }} {{ item }} | {{ EID_404_CMD_GREP_INFO }}"
      register: allocated_resources
      loop: "{{ nodes.stdout_lines | map('regex_replace', '\\s.*$', '') | list }}"
      ignore_errors: yes

    - name: Set high usage fact
      set_fact:
        high_usage_nodes: "{{ high_usage_nodes | default([]) + [{'node': item.item, 'high_usage': high_usage}] }}"
      loop: "{{ allocated_resources.results }}"
      vars:
        high_usage: "{{ item.stdout | regex_findall('(cpu|memory).*?([0-9]+)') | map('last') | map('int') | select('>=', (item.item == 'cpu' and CHECK_404_K8S_ALLOCATED_RESOURCES_CPU_USAGE_THRESHOLD | int) or (item.item == 'memory' and CHECK_404_K8S_ALLOCATED_RESOURCES_MEM_USAGE_THRESHOLD | int)) | list }}"
      when:
        - item.stdout is defined
        - item.item is defined
        - (CHECK_404_K8S_ALLOCATED_RESOURCES_CPU_CHECK_IGNORE | int == 0 and item.item == 'cpu') or (CHECK_404_K8S_ALLOCATED_RESOURCES_MEM_CHECK_IGNORE | int == 0 and item.item == 'memory')

    - name: STATUS
      debug:
        msg:
          GENERATE_EVENT: "{{ generate_event }}"
          Additional Info: "{{ additional_info | to_json }}"
      vars:
        generate_event: "{{ high_usage_nodes | default([]) | length > 0 }}"
        additional_info: "{{ high_usage_nodes | default([]) }}"
