---
- name: K8s Node CPU/Mem Monitoring
  hosts: remote_machines
  gather_facts: no
  vars:
    cpu_threshold: 85
    mem_threshold: 50
  tasks:
    - name: Get k8s node cpu and mem usage
      shell: "kubectl top nodes | sed '/CPU/d' | awk -F \" \" '{split($3,a,\"%\");split($5,b,\"%\");print $1\",\"a[1]\",\"b[1];}'"
      register: node_usage

    - name: Check cpu and mem usage
      set_fact:
        additional_info: >-
          {{
            additional_info | default([]) + [
              {
                'Node': item.split(',')[0],
                'CPU Usage': item.split(',')[1] | int,
                'Mem Usage': item.split(',')[2] | int,
                'CPU Status': (item.split(',')[1] | int >= cpu_threshold) | ternary('Critical', (item.split(',')[1] | int >= cpu_threshold - 5) | ternary('Major', (item.split(',')[1] | int >= cpu_threshold - 10) | ternary('Minor', 'OK'))),
                'Mem Status': (item.split(',')[2] | int >= mem_threshold) | ternary('Critical', (item.split(',')[2] | int >= mem_threshold - 5) | ternary('Major', (item.split(',')[2] | int >= mem_threshold - 10) | ternary('Minor', 'OK')))
              }
            ]
          }}
      loop: "{{ node_usage.stdout_lines }}"
      loop_control:
        loop_var: item

    - name: STATUS
      debug:
        msg:
          GENERATE_EVENT: "{{ additional_info | selectattr('CPU Status', 'match', 'Critical|Major|Minor') | list | length > 0 or additional_info | selectattr('Mem Status', 'match', 'Critical|Major') | list | length > 0 }}"
          Additional Info: "{{ [{'CHECK': 'K8s Node CPU/Mem Monitoring', 'STATE': (additional_info | selectattr('CPU Status', 'match', 'Critical|Major|Minor') | list | length == 0 and additional_info | selectattr('Mem Status', 'match', 'Critical|Major') | list | length == 0) | ternary('OK', 'NOK'), 'INFO': additional_info | selectattr('Mem Status', 'match', 'Critical|Major') | list}] | to_json }}"

